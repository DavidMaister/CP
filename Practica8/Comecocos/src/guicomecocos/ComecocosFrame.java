/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guicomecocos;

import data.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author david
 */
public class ComecocosFrame extends javax.swing.JFrame {
    
    private Laberinto laberinto;
    private Comecocos comecocos;
    private Mueve mueve;
    private Fantasma fantasmaAmarillo;
    private Fantasma fantasmaAzul;
    private Fantasma fantasmaRojo;
    private Fantasma fantasmaRosa;

    /**
     * Creates new form ComecocosFrame
     */
    public ComecocosFrame() {
        initComponents();
        laberinto = new Laberinto();
        laberinto.initRejilla();
        comecocos = new Comecocos();
        fantasmaAmarillo = new Fantasma(Fantasma.AMARILLO);
        fantasmaAzul = new Fantasma(Fantasma.AZUL);
        fantasmaRojo = new Fantasma(Fantasma.ROJO); 
        fantasmaRosa = new Fantasma(Fantasma.ROSA);

        mueve = new Mueve(this, 1);
        inicializaJuego();       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comecocosPanel1 = new ComecocosPanel(this);
        Pausa = new javax.swing.JButton();
        Puntos = new javax.swing.JTextField();
        Vidas = new javax.swing.JTextField();
        Nivel = new javax.swing.JTextField();
        Tiempo = new javax.swing.JTextField();
        Restante = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewItem = new javax.swing.JMenuItem();
        ExitItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        Ayuda = new javax.swing.JMenuItem();
        Record = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 687));

        comecocosPanel1.setPreferredSize(new java.awt.Dimension(560, 620));

        javax.swing.GroupLayout comecocosPanel1Layout = new javax.swing.GroupLayout(comecocosPanel1);
        comecocosPanel1.setLayout(comecocosPanel1Layout);
        comecocosPanel1Layout.setHorizontalGroup(
            comecocosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        comecocosPanel1Layout.setVerticalGroup(
            comecocosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        Pausa.setText("Pausa");
        Pausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PausaActionPerformed(evt);
            }
        });

        Puntos.setText("Puntos");

        Vidas.setText("Vidas");

        Nivel.setText("Nivel");

        Tiempo.setText("Tiempo");

        Restante.setText("Tiempo restante");

        FileMenu.setMnemonic('F');
        FileMenu.setText("File");
        FileMenu.setToolTipText("File");

        NewItem.setMnemonic('N');
        NewItem.setText("New");
        NewItem.setToolTipText("New");
        NewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewItemActionPerformed(evt);
            }
        });
        FileMenu.add(NewItem);

        ExitItem.setMnemonic('X');
        ExitItem.setText("Exit");
        ExitItem.setToolTipText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitItem);

        jMenuBar1.add(FileMenu);

        jMenu2.setText("Game");

        Ayuda.setMnemonic('A');
        Ayuda.setText("Ayuda");
        Ayuda.setToolTipText("H");
        Ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AyudaActionPerformed(evt);
            }
        });
        jMenu2.add(Ayuda);

        Record.setMnemonic('R');
        Record.setText("Record");
        Record.setToolTipText("R");
        Record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordActionPerformed(evt);
            }
        });
        jMenu2.add(Record);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Pausa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comecocosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Puntos)
                            .addComponent(Vidas)
                            .addComponent(Nivel)
                            .addComponent(Tiempo)
                            .addComponent(Restante, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pausa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comecocosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Puntos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Vidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Nivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Tiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Restante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void NewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewItemActionPerformed
        laberinto.initRejilla();
        laberinto.setPuntuacion(0);
        mueve.terminar();
        mueve = new Mueve(this, 3);
        inicializaJuego();
        mueve.suspender();
    }//GEN-LAST:event_NewItemActionPerformed

    private void PausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PausaActionPerformed
        if(mueve.getParado() == true)
                mueve.reanudar();
            else
                mueve.suspender();
    }//GEN-LAST:event_PausaActionPerformed

    private void AyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AyudaActionPerformed
        try {
            JTextArea ta = new JTextArea(20, 60);
            String homeDir = new File(".").getAbsolutePath();
            homeDir = homeDir.substring(0, homeDir.length() - 1);
            ta.read(new FileReader(homeDir+"src/ayuda.txt"), null);
            ta.setEditable(false);
            JOptionPane.showMessageDialog(null, new JScrollPane(ta));
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }//GEN-LAST:event_AyudaActionPerformed

    private void RecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordActionPerformed
        try {
            JTextArea ta = new JTextArea(20, 60);
            String homeDir = new File(".").getAbsolutePath();
            homeDir = homeDir.substring(0, homeDir.length() - 1);
            ta.read(new FileReader(homeDir+"record.txt"), null);
            ta.setEditable(false);
            JOptionPane.showMessageDialog(null, new JScrollPane(ta));
        } catch (IOException ioe) {
            ioe.printStackTrace();
        }
    }//GEN-LAST:event_RecordActionPerformed

    /**
     * Método que imprime en el recuadro correspondiente la puntuación actual
     * @param puntos puntuación inicial
     */
    public void setPuntuacion(int puntos){
        Puntos.setText("Puntos:\n"+puntos);
    }
    
    /**
     * Método que imprime en el recuadro correspondiente las vidas que quedan
     * @param vidas vidas actuales
     */
    public void setVidas(int vidas){
        Vidas.setText("Vidas restantes:\n"+vidas);
    }
    
    /**
     * Método que imprime en el recuadro correspondiente el nivel
     * @param nivel nivel
     */
    public void setNivel(int nivel){
        Nivel.setText("Nivel:\n"+nivel);
    }
    
    /**
     * Método que imprime en el recuadro correspondiente el tiempo que ha pasado
     * desde que empezó la partida.
     * @param tiempo tiempo desde que empezo el programa
     */
    public void setTime(long tiempo){
        Tiempo.setText("Tiempo total: "+tiempo+" s");
    }
    
    /**
     * Método que imprime en el recuadro correspondiente el tiempo restante que le
     * queda alnivel.
     * @param tiempo tiempo que le queda al nivel
     */
    public void setRestante(long tiempo){
        Restante.setText("Tiempo restante: "+tiempo+" s");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComecocosFrame().setVisible(true);
            }
        });
    }
    
    /**
    * Crea la hebra que ejecuta
    * el movimiento del comecocos
    * */
    private void inicializaJuego() {
        System.out.println(new File(".").getAbsolutePath());
        if(mueve==null){
            mueve=new Mueve(this,3);
        }
        Thread t=new Thread(mueve);
        t.start();
        mueve.reanudar();
    }
    
    public void setRecord(int puntuacion){
        try {
            File aux = new java.io.File("recordAux.txt");
            // Crear el fichero
            java.io.PrintWriter output = new java.io.PrintWriter(aux);
            // Escribir salida formateada en el fichero
            output.println("Record: "+puntuacion);
       
            //Creamos objeto File del fichero orginal
            File fileOriginal = new java.io.File("record.txt");
            //Scanner para el fichero orginal
            Scanner input;
            input = new Scanner(fileOriginal);
            while (input.hasNext()) {
                String record = input.next();
                int puntos = input.nextInt();
                output.println("Record: "+puntos);
            }
            output.close();
            input.close();
            output = new java.io.PrintWriter(fileOriginal);
            input = new Scanner(aux);
            
            while (input.hasNext()) {
                String record = input.next();
                int puntos = input.nextInt();
                output.println("Record: "+puntos);
            }
            output.close();
            input.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ComecocosFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("Excepcion al establecer record");
        }
    }
    /**
    * Obtiene una referencia a la Rejilla del juego
    * @return una referencia a la Rejilla del juego
    */
    public Laberinto getLaberinto(){
        return laberinto;
    }
    
    /**
    * Obtiene una referencia del comecocos del juego
    * @return una referencia del comecocos del juego
    */
    public Comecocos getComecocos(){
        return comecocos;
    }
    
    /**
    * Obtiene una referencia del objeto mueve del juego
    * @return una referencia del objeto mueve del juego
    */
    public Mueve getMueve(){
        return mueve;
    }
    
    /**
    * Obtiene una referencia al panel donde se dibujan las piezas del juego
    * @return una referencia al panel del juego
    */
    public ComecocosPanel getPanel(){
        return comecocosPanel1;
    }
    
    /**
     * Devuelve el fantasma amarillo
     * @return fantasma amarillo
     */
    public Fantasma getAmarillo(){
        return fantasmaAmarillo;
    }
    
    /**
     * Devuelve el fantasma azul
     * @return fantasma azul
     */
    public Fantasma getAzul(){
        return fantasmaAzul;
    }
    
    /**
     * Devuelve el fantasma rojo
     * @return fantasma rojo
     */
    public Fantasma getRojo(){
        return fantasmaRojo;
    }
    
    /**
     * Devuelve el fantasma rosa
     * @return fantasma rosa
     */
    public Fantasma getRosa(){
        return fantasmaRosa;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Ayuda;
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem NewItem;
    private javax.swing.JTextField Nivel;
    private javax.swing.JButton Pausa;
    private javax.swing.JTextField Puntos;
    private javax.swing.JMenuItem Record;
    private javax.swing.JTextField Restante;
    private javax.swing.JTextField Tiempo;
    private javax.swing.JTextField Vidas;
    private guicomecocos.ComecocosPanel comecocosPanel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
