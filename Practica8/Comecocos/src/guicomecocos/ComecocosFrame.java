/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guicomecocos;

import data.*;

/**
 *
 * @author david
 */
public class ComecocosFrame extends javax.swing.JFrame {
    
    private Laberinto laberinto;
    private Comecocos comecocos;
    private Mueve mueve;
    private Fantasma fantasmaAmarillo;
    private Fantasma fantasmaAzul;
    private Fantasma fantasmaRojo;
    private Fantasma fantasmaRosa;

    /**
     * Creates new form ComecocosFrame
     */
    public ComecocosFrame() {
        initComponents();
        laberinto = new Laberinto();
        laberinto.initRejilla();
        comecocos = new Comecocos();
        fantasmaAmarillo = new Fantasma(Fantasma.AMARILLO);
        fantasmaAzul = new Fantasma(Fantasma.AZUL);
        fantasmaRojo = new Fantasma(Fantasma.ROJO); 
        fantasmaRosa = new Fantasma(Fantasma.ROSA);


        mueve = new Mueve(this, 1);
        inicializaJuego();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comecocosPanel1 = new ComecocosPanel(this);
        Pausa = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewItem = new javax.swing.JMenuItem();
        ExitItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comecocosPanel1.setPreferredSize(new java.awt.Dimension(560, 620));

        javax.swing.GroupLayout comecocosPanel1Layout = new javax.swing.GroupLayout(comecocosPanel1);
        comecocosPanel1.setLayout(comecocosPanel1Layout);
        comecocosPanel1Layout.setHorizontalGroup(
            comecocosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );
        comecocosPanel1Layout.setVerticalGroup(
            comecocosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        Pausa.setText("Pausa");
        Pausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PausaActionPerformed(evt);
            }
        });

        FileMenu.setMnemonic('F');
        FileMenu.setText("File");
        FileMenu.setToolTipText("File");

        NewItem.setMnemonic('N');
        NewItem.setText("New");
        NewItem.setToolTipText("New");
        NewItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewItemActionPerformed(evt);
            }
        });
        FileMenu.add(NewItem);

        ExitItem.setMnemonic('X');
        ExitItem.setText("Exit");
        ExitItem.setToolTipText("Exit");
        ExitItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitItemActionPerformed(evt);
            }
        });
        FileMenu.add(ExitItem);

        jMenuBar1.add(FileMenu);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pausa)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addComponent(comecocosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Pausa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comecocosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitItemActionPerformed

    private void NewItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewItemActionPerformed
        laberinto.initRejilla();
        inicializaJuego();
        
    }//GEN-LAST:event_NewItemActionPerformed

    private void PausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PausaActionPerformed
        if(mueve.getParado() == true)
                mueve.reanudar();
            else
                mueve.suspender();
        
    }//GEN-LAST:event_PausaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComecocosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ComecocosFrame().setVisible(true);
            }
        });
    }
    
    /**
    * Crea la hebra que ejecuta
    * el movimiento del comecocos
    * */
    private void inicializaJuego() {
        if(mueve==null){
            mueve=new Mueve(this,2);
        }
        Thread t=new Thread(mueve);
        t.start();
        mueve.reanudar();
    }
    
    /**
    * Obtiene una referencia a la Rejilla del juego
    * @return una referencia a la Rejilla del juego
    */
    public Laberinto getLaberinto(){
        return laberinto;
    }
    
    /**
    * Obtiene una referencia del comecocos del juego
    * @return una referencia del comecocos del juego
    */
    public Comecocos getComecocos(){
        return comecocos;
    }
    
    /**
    * Obtiene una referencia del objeto mueve del juego
    * @return una referencia del objeto mueve del juego
    */
    public Mueve getMueve(){
        return mueve;
    }
    
    /**
    * Obtiene una referencia al panel donde se dibujan las piezas del juego
    * @return una referencia al panel del juego
    */
    public ComecocosPanel getPanel(){
        return comecocosPanel1;
    }
    
    /**
     * Devuelve el fantasma amarillo
     * @return fantasma amarillo
     */
    public Fantasma getAmarillo(){
        return fantasmaAmarillo;
    }
    
    /**
     * Devuelve el fantasma azul
     * @return fantasma azul
     */
    public Fantasma getAzul(){
        return fantasmaAzul;
    }
    
    /**
     * Devuelve el fantasma rojo
     * @return fantasma rojo
     */
    public Fantasma getRojo(){
        return fantasmaRojo;
    }
    
    /**
     * Devuelve el fantasma rosa
     * @return fantasma rosa
     */
    public Fantasma getRosa(){
        return fantasmaRosa;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ExitItem;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JMenuItem NewItem;
    private javax.swing.JButton Pausa;
    private guicomecocos.ComecocosPanel comecocosPanel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
